{"name":"Huglo Gardin Ned V","type":"com.fibaro.binarySwitch","apiVersion":"1.2","initialProperties":{"viewLayout":{"$jason":{"body":{"header":{"style":{"height":"0"},"title":"quickApp_device_1228"},"sections":{"items":[]}},"head":{"title":"quickApp_device_1228"}}},"uiCallbacks":[],"quickAppVariables":[{"name":"Broadlink","type":"string","value":"192.168.201.219"}],"typeTemplateInitialized":true},"files":[{"name":"main","isMain":true,"isOpen":true,"content":"-- Binary switch type should handle actions turnOn, turnOff\n-- To update binary switch state, update property \"value\" with boolean\n\nlocal qaHub = fibaro.getDevicesID({name=\"Broadlink RM4 Pro\"})[1]\nlocal broadLink = \"\"\n\nfunction QuickApp:turnOn()\n    self:debug(\"binary switch turned on\")\n    self:updateProperty(\"value\", true)\n\n    local irRfCode = \"sMD2AWibBgCbMAsYFwwLGAsYCxgXDAsYFwwLGAwXFwwXDRcMFg0LGBcMCxgLGAsYDBcXDAwXDBcMFwwXDBcMGBcMCxgLGAsYCxgMFwwXFwwXDAwXDBgWDBj2my8MGBYNCxgLGAsYFwwLGBcMDBcMFxcMFwwXDRYNCxgWDQsYCxgLGAsYFwwMFwwXDBgLGAsYCxgXDAsYCxgLGAwXDBcMFxcMGAsMGAsYFwwX9pswCxgXDAsYCxgLGBcMCxgXDAwXDBcXDRYNFg0XDAsYFwwLGAsYCxgLGBcMDBcMFwwYCxgLGAsYFwwLGAsYCxgLGAwXDBgWDRcMCxgLGBcMF/acMAsXFw0LGAsXDBgXDAsYFwwLGAsYFwwXDBcMFw0LGBYNCxgLGAsYCxgXDAsYCxgLGAwXDBcMGBcMCxgLGAsYCxgLGAwXFwwXDBcMFwwMGAsAAQKbMAsYFg0LGAsYCxgXDAsYFwwLGAwXFwwXDBcMFw0LGBYNCxgLGAsYCxgXDAwXDBcMGAsXDBgLGBcMCxgLGAsYCxgMFwwXGAsXDBgMFg0LGAsAAQKbMAsYFwwLGAsYCxgXDAsYFwwMFwwXFw0XDBYNFwwLGBcMCxgMFwwXDBcXDAwYCxgLGAsYCxgLGBcMCxgMFwwXDBcMGAsYFwwXDBcMFwwLGAsABdw=\"\n fibaro.call(qaHub, \"sendIRCommand\", broadLink, base64dec(irRfCode):tohex(), 0x51da)\nend\n\nfunction QuickApp:turnOff()\n    self:debug(\"binary switch turned off\")\n    self:updateProperty(\"value\", false)\n local irRfCode = \"sMDyAWibBgCbMAsYFwwLGAsYCxgXDAsYFwwMFwwXFw0WDRYNFg0LGBcMCxkLFwwXDBcXDAwXDBgLGAsYCxgMFxcMDBcMFwwXDBcMFxgMCxgXDAsYFwwLGBf2nC8LGBcMDBcMFwwXFwwMGBcMCxgLGBcMFwwXDBcMDBcXDQsYCxgLGAsYFwwLGAsYDBcMFwwYCxcYDAsYCxgLGAsYDBcXDAwXFw0LGBcMCxgX9pswCxgXDAsYCxgLGBcMDBcYDAsYCxgXDBcMFwwXDAsYFw0LGAsYCxgLGBcMCxgLGAsYDBcMFwwXGAwLFwwXDBcMGAsYFwwLGBcMDBcXDAwXF/ecLwsYFwwLGAwXDBcXDAwXFw0LGAsYFwwXDBcMFwwLGBcMDBgLFwwYCxgXDAsYCxgLGAwXDBcMFxcNCxcMGAsYCxgMFxcMDBcXDAwXFwwMFxj2mzALGBcMCxgLGAsYFwwMFxcMDBcMGBcMFwwXDBcMCxgXDAsYDBcMFwwYFg0LGAsYCxgLGAsYDBcXDAwXDBcMFwwYCxgXDAsYFwwLGBcMDBcX9pwvDBcXDAwYCxgLGBcMCxgXDAsYCxgXDBcMFwwXDAwYFg0LGAsYCxgLGBcMDBcMFwwYCxgLGAsYFwwLGAsYCxgLGAwXFwwMGBcMCxgXDAsYFwAF3A==\"\n fibaro.call(qaHub, \"sendIRCommand\", broadLink, base64dec(irRfCode):tohex(), 0x51da)\nend\n\nfunction base64dec(data)\n    local b = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\" -- You will need this for encoding/decoding\n    data = string.gsub(data, \"[^\" .. b .. \"=]\", \"\")\n    return (data:gsub(\n        \".\",\n        function(x)\n            if (x == \"=\") then\n                return \"\"\n            end\n            local r, f = \"\", (b:find(x) - 1)\n            for i = 6, 1, -1 do\n                r = r .. (f % 2 ^ i - f % 2 ^ (i - 1) > 0 and \"1\" or \"0\")\n            end\n            return r\n        end\n    ):gsub(\n        \"%d%d%d?%d?%d?%d?%d?%d?\",\n        function(x)\n            if (#x ~= 8) then\n                return \"\"\n            end\n            local c = 0\n            for i = 1, 8 do\n                c = c + (x:sub(i, i) == \"1\" and 2 ^ (8 - i) or 0)\n            end\n            return string.char(c)\n        end\n    ))\nend\n\nfunction string.tohex(str)\n    return (str:gsub(\n        \".\",\n        function(c)\n            return string.format(\"%02X\", string.byte(c))\n        end\n    ))\nend\n\nfunction QuickApp:onInit()\n    self:debug(\"onInit\")\n    broadLink = self:getVariable(\"Broadlink\")\nend\n"}]}